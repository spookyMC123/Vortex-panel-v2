<%- include('../components/template') %>
<main id="content">
   <%
      function formatLastUpdated(dateString) {
         const date = new Date(dateString);
         const now = new Date();
         const diffTime = Math.abs(now - date);
         const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));

         if (diffDays > 30) {
           return date.toLocaleString('en-US', { 
             year: 'numeric', 
             month: 'short', 
             day: 'numeric', 
             hour: 'numeric', 
             minute: '2-digit', 
             hour12: true 
           });
         } else {
           return `${diffDays} day${diffDays !== 1 ? 's' : ''} ago`;
         }
       }
       %>
   <%
      function getFileIcon(purpose) {
        const icons = {
          programming: `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="size-5 text-blue-400">
           <path fill-rule="evenodd" d="M4.25 2A2.25 2.25 0 0 0 2 4.25v11.5A2.25 2.25 0 0 0 4.25 18h11.5A2.25 2.25 0 0 0 18 15.75V4.25A2.25 2.25 0 0 0 15.75 2H4.25Zm4.03 6.28a.75.75 0 0 0-1.06-1.06L4.97 9.47a.75.75 0 0 0 0 1.06l2.25 2.25a.75.75 0 0 0 1.06-1.06L6.56 10l1.72-1.72Zm4.5-1.06a.75.75 0 1 0-1.06 1.06L13.44 10l-1.72 1.72a.75.75 0 1 0 1.06 1.06l2.25-2.25a.75.75 0 0 0 0-1.06l-2.25-2.25Z" clip-rule="evenodd" />
         </svg>
         `,
          webDevelopment: `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="size-5 text-green-400">
           <path fill-rule="evenodd" d="M4.25 2A2.25 2.25 0 0 0 2 4.25v11.5A2.25 2.25 0 0 0 4.25 18h11.5A2.25 2.25 0 0 0 18 15.75V4.25A2.25 2.25 0 0 0 15.75 2H4.25Zm4.03 6.28a.75.75 0 0 0-1.06-1.06L4.97 9.47a.75.75 0 0 0 0 1.06l2.25 2.25a.75.75 0 0 0 1.06-1.06L6.56 10l1.72-1.72Zm4.5-1.06a.75.75 0 1 0-1.06 1.06L13.44 10l-1.72 1.72a.75.75 0 1 0 1.06 1.06l2.25-2.25a.75.75 0 0 0 0-1.06l-2.25-2.25Z" clip-rule="evenodd" />
         </svg>
         `,
          textDocument: `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="size-5 text-purple-400">
           <path fill-rule="evenodd" d="M4.5 2A1.5 1.5 0 0 0 3 3.5v.443c-.795.077-1.584.176-2.365.298a.75.75 0 1 0 .23 1.482l.149-.022.841 10.518A2.75 2.75 0 0 0 7.596 19h4.807a2.75 2.75 0 0 0 2.742-2.53l.841-10.52.149.023a.75.75 0 0 0 .23-1.482A41.03 41.03 0 0 0 14 4.193V3.75A2.75 2.75 0 0 0 11.25 1h-2.5ZM10 4c.84 0 1.673.025 2.5.075V3.75c0-.69-.56-1.25-1.25-1.25h-2.5c-.69 0-1.25.56-1.25 1.25v.325C8.327 4.025 9.16 4 10 4ZM8.58 7.72a.75.75 0 0 0-1.5.06l.3 7.5a.75.75 0 1 0 1.5-.06l-.3-7.5zm4.34.06a.75.75 0 1 0-1.5-.06l-.3 7.5a.75.75 0 1 0 1.5.06l.3-7.5z" clip-rule="evenodd" />
          </svg>`,
          archive: `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="size-5 text-orange-400">
            <path d="M2 3a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1h16a1 1 0 0 0 1-1V4a1 1 0 0 0-1-1H2Z" />
            <path fill-rule="evenodd" d="M2 7.5h16l-.811 7.71a2 2 0 0 1-1.99 1.79H4.802a2 2 0 0 1-1.99-1.79L2 7.5ZM7 11a1 1 0 0 1 1-1h4a1 1 0 1 1 0 2H8a1 1 0 0 1-1-1Z" clip-rule="evenodd" />
          </svg>`,
          other: `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="size-5 text-neutral-400">
           <path fill-rule="evenodd" d="M3.75 9.776c.112-.017.227-.026.344-.026h15.812c.117 0 .232.009.344.026m-16.5 0a2.25 2.25 0 0 0-1.883 2.542l.857 6a2.25 2.25 0 0 0 2.227 1.932H19.05a2.25 2.25 0 0 0 2.227-1.932l.857-6a2.25 2.25 0 0 0-1.883-2.542m-16.5 0V6A2.25 2.25 0 0 1 6 3.75h3.879a1.5 1.5 0 0 1 1.06.44l2.122 2.12a1.5 1.5 0 0 1 1.06.44H18A2.25 2.25 0 0 1 20.25 9v.776" />
         </svg>
         `
        };

        return icons[purpose] || icons.other;
      }
      %>
   <div class="bg-transparent">
      <div class="sm:flex sm:items-center px-4 sm:px-8 pt-4">
         <div class="sm:flex-auto">
         </div>
         <% let query = req.query.path ? '?path=' + encodeURIComponent(req.query.path) : ''; %>
         <div class="mt-4 sm:ml-16 sm:mt-0 flex space-x-2 sm:space-x-4">
            <div class="relative">
               <input type="text" id="searchInput" placeholder="Search files..." class="px-3 sm:px-4 py-2 sm:py-2.5 bg-white/5 border border-white/10 shadow-lg focus:scale-105 transition rounded-xl text-white placeholder-neutral-500 focus:outline-none focus:border-neutral-600 focus:ring-1 focus:ring-neutral-600 w-36 sm:w-64">
               <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-4 h-4 absolute right-3 top-2.5 sm:top-3 text-neutral-400">
                  <path fill-rule="evenodd" d="M9 3.5a5.5 5.5 0 100 11 5.5 5.5 0 000-11zM2 9a7 7 0 1112.452 4.391l3.328 3.329a.75.75 0 11-1.06 1.06l-3.329-3.328A7 7 0 012 9z" clip-rule="evenodd" />
               </svg>
            </div>
            <button id="uploadBtn" class="flex items-center rounded-xl <%= theme['button-color'] %> px-3 sm:px-4 py-2 sm:py-2.5 text-center text-xs sm:text-sm font-medium shadow-lg transition focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600">
               <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-4 h-4 mr-1 sm:mr-2">
                  <path d="M9.25 13.25a.75.75 0 001.5 0V4.636l2.955 3.129a.75.75 0 001.09-1.03l-4.25-4.5a.75.75 0 00-1.09 0l-4.25 4.5a.75.75 0 101.09 1.03L9.25 4.636v8.614z" />
                  <path d="M3.5 12.75a.75.75 0 00-1.5 0v2.5A2.75 2.75 0 004.75 18h10.5A2.75 2.75 0 0018 15.25v-2.5a.75.75 0 00-1.5 0v2.5c0 .69-.56 1.25-1.25 1.25H4.75c-.69 0-1.25-.56-1.25-1.25v-2.5z" />
               </svg>
               <span class="hidden sm:inline">Upload</span>
            </button>
            <input type="file" id="fileInput" multiple style="display: none;">
         </div>
      </div>
   </div>
   <%- include('../components/instance') %>
   <div class="px-2 sm:px-6 lg:px-8">
      <div class="flex items-center justify-between mb-4">
         <div class="flex-grow overflow-x-auto whitespace-nowrap">
            <h1 class="text-white text-sm">
               <a class="text-neutral-300 hover:text-neutral-200 transition" href="./files">/app/data/</a>
               <% 
                  if (req.query.path) { 
                      const parts = req.query.path.split('/');
                      let currentPath = '';

                      parts.forEach((part, index) => {
                          if (part) { // Skip empty parts from leading/trailing slashes
                              currentPath += encodeURIComponent(part);

                              if (index < parts.length - 1) {
                                  %>
                                  <a href="./files?path=<%= currentPath %>" class="text-neutral-300 hover:text-neutral-200 transition"><%= part %></a>/
                                  <% 
                                  currentPath += '/';
                              } else {
                                  %>
                                  <span class="text-neutral-100"><%= part %></span>
                                  <%
                              }
                          }
                      });
                  }
              %>
            </h1>
         </div>
         <p id="diskUsage" class="text-xs sm:text-sm text-neutral-400 bg-white/5 px-2 sm:px-3 py-1 rounded-lg whitespace-nowrap">Loading...</p>
      </div>

      <!-- Create File/Folder Buttons -->
      <div class="flex space-x-2 mb-4">
         <button id="createFileBtn" class="flex items-center text-xs sm:text-sm bg-white/5 hover:bg-white/10 text-neutral-300 px-3 py-1.5 rounded-lg transition">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-4 h-4 mr-1">
               <path fill-rule="evenodd" d="M4.25 2A2.25 2.25 0 0 0 2 4.25v11.5A2.25 2.25 0 0 0 4.25 18h11.5A2.25 2.25 0 0 0 18 15.75V4.25A2.25 2.25 0 0 0 15.75 2H4.25Zm4.03 6.28a.75.75 0 0 0-1.06-1.06L4.97 9.47a.75.75 0 0 0 0 1.06l2.25 2.25a.75.75 0 0 0 1.06-1.06L6.56 10l1.72-1.72Zm4.5-1.06a.75.75 0 1 0-1.06 1.06L13.44 10l-1.72 1.72a.75.75 0 1 0 1.06 1.06l2.25-2.25a.75.75 0 0 0 0-1.06l-2.25-2.25Z" clip-rule="evenodd" />
            </svg>
            New File
         </button>
         <button id="createFolderBtn" class="flex items-center text-xs sm:text-sm bg-white/5 hover:bg-white/10 text-neutral-300 px-3 py-1.5 rounded-lg transition">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-4 h-4 mr-1">
               <path d="M3.75 3A1.75 1.75 0 0 0 2 4.75v3.26a3.235 3.235 0 0 1 1.75-.51h12.5c.644 0 1.245.188 1.75.51V6.75A1.75 1.75 0 0 0 16.25 5h-4.836a.25.25 0 0 1-.177-.073L9.823 3.513A1.75 1.75 0 0 0 8.586 3H3.75ZM3.75 9A1.75 1.75 0 0 0 2 10.75v4.5c0 .966.784 1.75 1.75 1.75h12.5A1.75 1.75 0 0 0 18 15.25v-4.5A1.75 1.75 0 0 0 16.25 9H3.75Z" />
            </svg>
            New Folder
         </button>
      </div>

      <div class="overflow-x-auto border border-white/5 shadow rounded-xl">
         <table class="min-w-full divide-y divide-white/5">
            <thead class="bg-white/5">
               <tr>
                  <th scope="col" class="px-3 sm:px-6 py-2 sm:py-3 text-left text-xs font-medium text-neutral-300 uppercase tracking-wider">
                     <input type="checkbox" id="selectAll" class="form-checkbox h-4 w-4 text-neutral-500 bg-white/10 border border-white/15 rounded focus:ring-offset-neutral-800 focus:ring-neutral-700 transition focus:border-none file-checkbox">
                  </th>
                  <th scope="col" class="px-3 sm:px-6 py-2 sm:py-3 text-left text-xs font-medium text-neutral-300 uppercase tracking-wider">Name</th>
                  <th scope="col" class="px-3 sm:px-6 py-2 sm:py-3 text-left text-xs font-medium text-neutral-300 uppercase tracking-wider hidden sm:table-cell">Size</th>
                  <th scope="col" class="px-3 sm:px-6 py-2 sm:py-3 text-left text-xs font-medium text-neutral-300 uppercase tracking-wider hidden sm:table-cell">Modified</th>
                  <th scope="col" class="px-3 sm:px-6 py-2 sm:py-3 text-left text-xs font-medium text-neutral-300 uppercase tracking-wider"></th>
               </tr>
            </thead>
            <tbody class="divide-y divide-white/5">
               <% files.filter(file => file.isDirectory).forEach(function(directory) { %>
                  <% let currentPath = req.query.path ? req.query.path + '/' : ''; %>
                  <% let extension = req.query.path ? '?path=' + encodeURIComponent(req.query.path) : ''; %>
                  <tr class="hover:bg-white/2.5 transition">
                     <td class="px-3 sm:px-6 py-3 whitespace-nowrap">
                        <input type="checkbox" class="form-checkbox h-4 w-4 text-neutral-500 bg-white/5 border border-white/10 rounded focus:ring-offset-neutral-800 focus:ring-neutral-700 transition focus:border-none file-checkbox" data-filename="<%= directory.name %>">
                     </td>
                     <td class="px-3 sm:px-6 py-3 whitespace-nowrap">
                        <a href="/instance/<%= req.params.id %>/files?path=<%= currentPath %><%= encodeURIComponent(directory.name) %>" class="flex items-center group">
                           <span class="mr-2 sm:mr-3 flex-shrink-0">
                              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-5 h-5 text-yellow-400">
                                 <path d="M3.75 3A1.75 1.75 0 0 0 2 4.75v3.26a3.235 3.235 0 0 1 1.75-.51h12.5c.644 0 1.245.188 1.75.51V6.75A1.75 1.75 0 0 0 16.25 5h-4.836a.25.25 0 0 1-.177-.073L9.823 3.513A1.75 1.75 0 0 0 8.586 3H3.75ZM3.75 9A1.75 1.75 0 0 0 2 10.75v4.5c0 .966.784 1.75 1.75 1.75h12.5A1.75 1.75 0 0 0 18 15.25v-4.5A1.75 1.75 0 0 0 16.25 9H3.75Z" />
                              </svg>
                           </span>
                           <span class="text-sm font-medium text-white group-hover:text-blue-400 transition truncate max-w-[150px] sm:max-w-none"><%= directory.name %></span>
                        </a>
                     </td>
                     <td class="px-3 sm:px-6 py-3 whitespace-nowrap text-sm text-neutral-400 hidden sm:table-cell">
                        —
                     </td>
                     <td class="px-3 sm:px-6 py-3 whitespace-nowrap text-sm text-neutral-400 hidden sm:table-cell">
                        —
                     </td>
                     <td class="px-3 sm:px-6 py-3 whitespace-nowrap text-right text-sm font-medium relative">
                        <button onclick="toggleDropdown(event, '<%= directory.name %>')" class="text-neutral-400 hover:text-white transition p-1 rounded hover:bg-white/10">
                           <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
                              <path d="M10 6a2 2 0 110-4 2 2 0 010 4zM10 12a2 2 0 110-4 2 2 0 010 4zM10 18a2 2 0 110-4 2 2 0 010 4z" />
                           </svg>
                        </button>
                        <div id="dropdown-<%= directory.name %>" class="absolute right-0 mt-2 w-48 rounded-xl shadow-lg bg-neutral-800 ring-1 ring-white/10 z-10 transform opacity-0 scale-95 transition-all duration-200 ease-out pointer-events-none">
                           <div class="p-1" role="menu" aria-orientation="vertical" aria-labelledby="options-menu">
                              <a href="#" onclick="openRenameModal('<%= directory.name %>', '<%= extension %>')" class="transition rounded-lg block px-4 py-2 text-sm text-neutral-300 hover:bg-white/5 hover:text-white text-left" role="menuitem">Rename</a>
                              <a href="#" onclick="openDeleteModal('<%= directory.name %>', '<%= extension %>')" class="transition rounded-lg block px-4 py-2 text-sm text-red-400 hover:bg-red-500/10 text-left" role="menuitem">Delete</a>
                           </div>
                        </div>
                     </td>
                  </tr>
               <% }); %>

               <% files.filter(file => !file.isDirectory).forEach(function(file) { %>
                  <% 
                     let purpose = file.purpose;
                     if (['zip', 'rar', 'tar', 'gz', '7z'].some(ext => file.name.toLowerCase().endsWith('.' + ext))) {
                        purpose = 'archive';
                     }
                     let extension = req.query.path ? '?path=' + encodeURIComponent(req.query.path) : ''; 
                  %>
                  <tr class="hover:bg-white/2.5 transition">
                     <td class="px-3 sm:px-6 py-3 whitespace-nowrap">
                        <input type="checkbox" class="form-checkbox h-4 w-4 text-neutral-500 bg-white/5 border border-white/10 rounded focus:ring-offset-neutral-800 focus:ring-neutral-700 transition focus:border-none file-checkbox" data-filename="<%= file.name %>">
                     </td>
                     <td class="px-3 sm:px-6 py-3 whitespace-nowrap">
                        <a href="/instance/<%= req.params.id %>/files/view/<%= encodeURIComponent(file.name) %><%= extension %>" class="flex items-center group">
                           <span class="mr-2 sm:mr-3 flex-shrink-0">
                              <%- getFileIcon(purpose) %>
                           </span>
                           <span class="text-sm font-medium text-white group-hover:text-blue-400 transition truncate max-w-[150px] sm:max-w-none"><%= file.name %></span>
                        </a>
                     </td>
                     <td class="px-3 sm:px-6 py-3 whitespace-nowrap text-sm text-neutral-400 hidden sm:table-cell">
                        <%= file.size %>
                     </td>
                     <td class="px-3 sm:px-6 py-3 whitespace-nowrap text-sm text-neutral-400 hidden sm:table-cell">
                        <%= formatLastUpdated(file.lastUpdated) %>
                     </td>
                     <td class="px-3 sm:px-6 py-3 whitespace-nowrap text-right text-sm font-medium relative">
                        <button onclick="toggleDropdown(event, '<%= file.name %>')" class="text-neutral-400 hover:text-white transition p-1 rounded hover:bg-white/10">
                           <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
                              <path d="M10 6a2 2 0 110-4 2 2 0 010 4zM10 12a2 2 0 110-4 2 2 0 010 4zM10 18a2 2 0 110-4 2 2 0 010 4z" />
                           </svg>
                        </button>
                        <div id="dropdown-<%= file.name %>" class="absolute right-0 mt-2 w-48 rounded-xl shadow-lg bg-neutral-800 ring-1 ring-white/10 z-10 transform opacity-0 scale-95 transition-all duration-200 ease-out pointer-events-none">
                           <div class="p-1" role="menu" aria-orientation="vertical" aria-labelledby="options-menu">
                              <a href="#" onclick="openRenameModal('<%= file.name %>', '<%= extension %>')" class="transition rounded-lg block px-4 py-2 text-sm text-neutral-300 hover:bg-white/5 hover:text-white text-left" role="menuitem">Rename</a>
                              <% if (['zip', 'rar', 'tar', 'gz', '7z'].some(ext => file.name.toLowerCase().endsWith('.' + ext))) { %>
                                 <a href="#" onclick="openExtractModal('<%= file.name %>', '<%= extension %>')" class="transition rounded-lg block px-4 py-2 text-sm text-green-400 hover:bg-green-500/10 text-left" role="menuitem">Extract</a>
                              <% } %>
                              <a href="#" onclick="openDeleteModal('<%= file.name %>', '<%= extension %>')" class="transition rounded-lg block px-4 py-2 text-sm text-red-400 hover:bg-red-500/10 text-left" role="menuitem">Delete</a>
                           </div>
                        </div>
                     </td>
                  </tr>
               <% }); %>
            </tbody>
         </table>

         <% if (files.length === 0) { %>
            <div class="text-center py-12">
               <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-12 h-12 mx-auto text-neutral-500">
                  <path stroke-linecap="round" stroke-linejoin="round" d="M3.75 9.776c.112-.017.227-.026.344-.026h15.812c.117 0 .232.009.344.026m-16.5 0a2.25 2.25 0 00-1.883 2.542l.857 6a2.25 2.25 0 002.227 1.932H19.05a2.25 2.25 0 002.227-1.932l.857-6a2.25 2.25 0 00-1.883-2.542m-16.5 0V6A2.25 2.25 0 016 3.75h3.879a1.5 1.5 0 011.06.44l2.122 2.12a1.5 1.5 0 001.06.44H18A2.25 2.25 0 0120.25 9v.776" />
               </svg>
               <h3 class="mt-2 text-sm font-medium text-white">No files found</h3>
               <p class="mt-1 text-sm text-neutral-500">Upload files to get started.</p>
               <div class="mt-6">
                  <button id="emptyUploadBtn" class="inline-flex items-center rounded-xl <%= theme['button-color'] %> px-4 py-2 text-sm font-medium shadow-lg transition focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600">
                     <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-4 h-4 mr-2">
                        <path d="M9.25 13.25a.75.75 0 001.5 0V4.636l2.955 3.129a.75.75 0 001.09-1.03l-4.25-4.5a.75.75 0 00-1.09 0l-4.25 4.5a.75.75 0 101.09 1.03L9.25 4.636v8.614z" />
                        <path d="M3.5 12.75a.75.75 0 00-1.5 0v2.5A2.75 2.75 0 004.75 18h10.5A2.75 2.75 0 0018 15.25v-2.5a.75.75 0 00-1.5 0v2.5c0 .69-.56 1.25-1.25 1.25H4.75c-.69 0-1.25-.56-1.25-1.25v-2.5z" />
                     </svg>
                     Upload Files
                  </button>
               </div>
            </div>
         <% } %>
      </div>

      <!-- prevent action bar from hiding files -->
      <div class="pb-12"></div>
   </div>

   <!-- Floating Action Bar -->
   <div id="floatingActionBar" class="fixed bottom-6 left-1/2 transform -translate-x-1/2 bg-neutral-800/90 backdrop-blur text-white py-3 px-6 rounded-xl shadow-xl border border-white/10 flex items-center space-x-4 sm:space-x-6 translate-y-full transition-transform duration-300 ease-in-out">
      <span id="selectedFilesCount" class="text-xs sm:text-sm">0 files selected</span>
      <button id="massDeleteBtn" class="flex items-center text-xs sm:text-sm bg-red-500/90 hover:bg-red-600 text-white font-normal py-1.5 px-2 sm:px-3 rounded-lg transition">
         <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-3 h-3 sm:w-4 sm:h-4 mr-1 sm:mr-1.5">
            <path fill-rule="evenodd" d="M8.75 1A2.75 2.75 0 006 3.75v.443c-.795.077-1.584.176-2.365.298a.75.75 0 10.23 1.482l.149-.022.841 10.518A2.75 2.75 0 007.596 19h4.807a2.75 2.75 0 002.742-2.53l.841-10.52.149.023a.75.75 0 00.23-1.482A41.03 41.03 0 0014 4.193V3.75A2.75 2.75 0 0011.25 1h-2.5zM10 4c.84 0 1.673.025 2.5.075V3.75c0-.69-.56-1.25-1.25-1.25h-2.5c-.69 0-1.25.56-1.25 1.25v.325C8.327 4.025 9.16 4 10 4zM8.58 7.72a.75.75 0 00-1.5.06l.3 7.5a.75.75 0 101.5-.06l-.3-7.5zm4.34.06a.75.75 0 10-1.5-.06l-.3 7.5a.75.75 0 101.5.06l.3-7.5z" clip-rule="evenodd" />
         </svg>
         Delete
      </button>
      <button id="massExtractBtn" class="flex items-center text-xs sm:text-sm bg-green-500/90 hover:bg-green-600 text-white font-normal py-1.5 px-2 sm:px-3 rounded-lg transition hidden">
         <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-3 h-3 sm:w-4 sm:h-4 mr-1 sm:mr-1.5">
            <path fill-rule="evenodd" d="M15.988 3.012A2.25 2.25 0 0118 5.25v6.5A2.25 2.25 0 0115.75 14H13.5V7A2.5 2.5 0 0011 4.5H8.128a2.252 2.252 0 011.884-1.488A2.25 2.25 0 0112.25 1h1.5a2.25 2.25 0 012.238 2.012zM11.5 3.25a.75.75 0 01.75-.75h1.5a.75.75 0 01.75.75v.25h-3v-.25z" clip-rule="evenodd" />
            <path fill-rule="evenodd" d="M2 7a1 1 0 011-1h8a1 1 0 011 1v10a1 1 0 01-1 1H3a1 1 0 01-1-1V7zm2 3.25a.75.75 0 01.75-.75h4.5a.75.75 0 010 1.5h-4.5a.75.75 0 01-.75-.75zm0 3.5a.75.75 0 01.75-.75h4.5a.75.75 0 010 1.5h-4.5a.75.75 0 01-.75-.75z" clip-rule="evenodd" />
         </svg>
         Extract
      </button>
   </div>

            <!-- Create File Modal -->
            <div id="createFileModal" class="fixed inset-0 bg-black/70 backdrop-blur z-50 flex items-center justify-center opacity-0 pointer-events-none transition-opacity duration-300">
               <div class="bg-neutral-800 border border-white/10 rounded-xl p-6 max-w-md w-full transform scale-95 transition-transform duration-300 shadow-2xl">
                  <div class="mb-5">
                     <h2 class="text-lg font-medium text-white">Create New File</h2>
                     <button onclick="closeCreateFileModal()" class="px-4 py-2 text-sm bg-white/5 hover:bg-white/10 text-neutral-300 rounded-lg transition">Cancel</button>
                     <button onclick="window.location.href='/instance/<%= req.params.id %>/files/create<%= query %>'" class="px-4 py-2 text-sm bg-blue-500 hover:bg-blue-600 text-white rounded-lg transition">Create</button>
                  </div>
               </div>
            </div>

            <!-- Create Folder Modal -->
            <div id="createFolderModal" class="fixed inset-0 bg-black/70 backdrop-blur z-50 flex items-center justify-center opacity-0 pointer-events-none transition-opacity duration-300">
               <div class="bg-neutral-800 border border-white/10 rounded-xl p-6 max-w-md w-full transform scale-95 transition-transform duration-300 shadow-2xl">
                  <div class="mb-5">
                     <h2 class="text-lg font-medium text-white">Create New Folder</h2>
                     <p class="mt-1 text-sm text-neutral-400">Enter a name for the new folder.</p>
                  </div>
                     <button onclick="closeCreateFolderModal()" class="px-4 py-2 text-sm bg-white/5 hover:bg-white/10 text-neutral-300 rounded-lg transition">Cancel</button>
                     <button onclick="window.location.href='/instance/<%= req.params.id %>/files/folder/create<%= query %>'" class="px-4 py-2 text-sm bg-blue-500 hover:bg-blue-600 text-white rounded-lg transition">Create</button>
                  </div>
               </div>
            </div>

   <!-- Mass Delete Confirmation Modal -->
   <div id="massDeleteModal" class="fixed inset-0 bg-black/70 backdrop-blur z-50 flex items-center justify-center opacity-0 pointer-events-none transition-opacity duration-300">
      <div class="bg-neutral-800 border border-white/10 rounded-xl p-6 max-w-md w-full transform scale-95 transition-transform duration-300 shadow-2xl">
         <div class="flex items-center mb-4">
            <div class="flex-shrink-0 flex items-center justify-center h-10 w-10 rounded-full bg-red-500/20">
               <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="h-5 w-5 text-red-400">
                  <path fill-rule="evenodd" d="M8.75 1A2.75 2.75 0 006 3.75v.443c-.795.077-1.584.176-2.365.298a.75.75 0 10.23 1.482l.149-.022.841 10.518A2.75 2.75 0 007.596 19h4.807a2.75 2.75 0 002.742-2.53l.841-10.52.149.023a.75.75 0 00.23-1.482A41.03 41.03 0 0014 4.193V3.75A2.75 2.75 0 0011.25 1h-2.5zM10 4c.84 0 1.673.025 2.5.075V3.75c0-.69-.56-1.25-1.25-1.25h-2.5c-.69 0-1.25.56-1.25 1.25v.325C8.327 4.025 9.16 4 10 4zM8.58 7.72a.75.75 0 00-1.5.06l.3 7.5a.75.75 0 101.5-.06l-.3-7.5zm4.34.06a.75.75 0 10-1.5-.06l-.3 7.5a.75.75 0 101.5.06l.3-7.5z" clip-rule="evenodd" />
               </svg>
            </div>
            <div class="ml-4">
               <h2 class="text-lg font-medium text-white">Delete files</h2>
               <p id="massDeleteMessage" class="text-sm text-neutral-400 mt-1"></p>
            </div>
         </div>
         <div class="mt-6 flex justify-end space-x-3">
            <button onclick="closeMassDeleteModal()" class="px-4 py-2 text-sm bg-white/5 hover:bg-white/10 text-neutral-300 rounded-lg transition">Cancel</button>
            <button id="confirmMassDelete" class="px-4 py-2 text-sm bg-red-500 hover:bg-red-600 text-white rounded-lg transition">Delete</button>
         </div>
      </div>
   </div>

   <!-- Extract Confirmation Modal -->
   <div id="extractModal" class="fixed inset-0 bg-black/70 backdrop-blur z-50 flex items-center justify-center opacity-0 pointer-events-none transition-opacity duration-300">
      <div class="bg-neutral-800 border border-white/10 rounded-xl p-6 max-w-md w-full transform scale-95 transition-transform duration-300 shadow-2xl">
         <div class="flex items-center mb-4">
            <div class="flex-shrink-0 flex items-center justify-center h-10 w-10 rounded-full bg-green-500/20">
               <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="h-5 w-5 text-green-400">
                  <path fill-rule="evenodd" d="M15.988 3.012A2.25 2.25 0 0118 5.25v6.5A2.25 2.25 0 0115.75 14H13.5V7A2.5 2.5 0 0011 4.5H8.128a2.252 2.252 0 011.884-1.488A2.25 2.25 0 0112.25 1h1.5a2.25 2.25 0 012.238 2.012zM11.5 3.25a.75.75 0 01.75-.75h1.5a.75.75 0 01.75.75v.25h-3v-.25z" clip-rule="evenodd" />
                  <path fill-rule="evenodd" d="M2 7a1 1 0 011-1h8a1 1 0 011 1v10a1 1 0 01-1 1H3a1 1 0 01-1-1V7zm2 3.25a.75.75 0 01.75-.75h4.5a.75.75 0 010 1.5h-4.5a.75.75 0 01-.75-.75zm0 3.5a.75.75 0 01.75-.75h4.5a.75.75 0 010 1.5h-4.5a.75.75 0 01-.75-.75z" clip-rule="evenodd" />
               </svg>
            </div>
            <div class="ml-4">
               <h2 class="text-lg font-medium text-white">Extract archive</h2>
               <p id="extractMessage" class="text-sm text-neutral-400 mt-1">Where would you like to extract the files?</p>
            </div>
         </div>
         <div class="mt-4">
            <label class="block text-sm font-medium text-neutral-300 mb-1">Destination Path</label>
            <input type="text" id="extractPath" class="w-full px-4 py-2 bg-white/5 border border-white/10 rounded-lg focus:outline-none focus:ring-1 focus:ring-white/20 focus:border-white/20 transition text-white placeholder-neutral-500" placeholder="Leave empty to extract here">
         </div>
         <div class="mt-6 flex justify-end space-x-3">
            <button onclick="closeExtractModal()" class="px-4 py-2 text-sm bg-white/5 hover:bg-white/10 text-neutral-300 rounded-lg transition">Cancel</button>
            <button id="confirmExtract" class="px-4 py-2 text-sm bg-green-500 hover:bg-green-600 text-white rounded-lg transition">Extract</button>
         </div>
      </div>
   </div>

   <!-- Mass Extract Confirmation Modal -->
   <div id="massExtractModal" class="fixed inset-0 bg-black/70 backdrop-blur z-50 flex items-center justify-center opacity-0 pointer-events-none transition-opacity duration-300">
      <div class="bg-neutral-800 border border-white/10 rounded-xl p-6 max-w-md w-full transform scale-95 transition-transform duration-300 shadow-2xl">
         <div class="flex items-center mb-4">
            <div class="flex-shrink-0 flex items-center justify-center h-10 w-10 rounded-full bg-green-500/20">
               <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="h-5 w-5 text-green-400">
                  <path fill-rule="evenodd" d="M15.988 3.012A2.25 2.25 0 0118 5.25v6.5A2.25 2.25 0 0115.75 14H13.5V7A2.5 2.5 0 0011 4.5H8.128a2.252 2.252 0 011.884-1.488A2.25 2.25 0 0112.25 1h1.5a2.25 2.25 0 012.238 2.012zM11.5 3.25a.75.75 0 01.75-.75h1.5a.75.75 0 01.75.75v.25h-3v-.25z" clip-rule="evenodd" />
                  <path fill-rule="evenodd" d="M2 7a1 1 0 011-1h8a1 1 0 011 1v10a1 1 0 01-1 1H3a1 1 0 01-1-1V7zm2 3.25a.75.75 0 01.75-.75h4.5a.75.75 0 010 1.5h-4.5a.75.75 0 01-.75-.75zm0 3.5a.75.75 0 01.75-.75h4.5a.75.75 0 010 1.5h-4.5a.75.75 0 01-.75-.75z" clip-rule="evenodd" />
               </svg>
            </div>
            <div class="ml-4">
               <h2 class="text-lg font-medium text-white">Extract archives</h2>
               <p id="massExtractMessage" class="text-sm text-neutral-400 mt-1">Where would you like to extract the files?</p>
            </div>
         </div>
         <div class="mt-4">
            <label class="block text-sm font-medium text-neutral-300 mb-1">Destination Path</label>
            <input type="text" id="massExtractPath" class="w-full px-4 py-2 bg-white/5 border border-white/10 rounded-lg focus:outline-none focus:ring-1 focus:ring-white/20 focus:border-white/20 transition text-white placeholder-neutral-500" placeholder="Leave empty to extract here">
         </div>
         <div class="mt-6 flex justify-end space-x-3">
            <button onclick="closeMassExtractModal()" class="px-4 py-2 text-sm bg-white/5 hover:bg-white/10 text-neutral-300 rounded-lg transition">Cancel</button>
            <button id="confirmMassExtract" class="px-4 py-2 text-sm bg-green-500 hover:bg-green-600 text-white rounded-lg transition">Extract</button>
         </div>
      </div>
   </div>

   <!-- Delete Confirmation Modal -->
   <div id="deleteModal" class="fixed inset-0 bg-black/70 backdrop-blur z-50 flex items-center justify-center opacity-0 pointer-events-none transition-opacity duration-300">
      <div class="bg-neutral-800 border border-white/10 rounded-xl p-6 max-w-md w-full transform scale-95 transition-transform duration-300 shadow-2xl">
         <div class="flex items-center mb-4">
            <div class="flex-shrink-0 flex items-center justify-center h-10 w-10 rounded-full bg-red-500/20">
               <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="h-5 w-5 text-red-400">
                  <path fill-rule="evenodd" d="M8.75 1A2.75 2.75 0 006 3.75v.443c-.795.077-1.584.176-2.365.298a.75.75 0 10.23 1.482l.149-.022.841 10.518A2.75 2.75 0 007.596 19h4.807a2.75 2.75 0 002.742-2.53l.841-10.52.149.023a.75.75 0 00.23-1.482A41.03 41.03 0 0014 4.193V3.75A2.75 2.75 0 0011.25 1h-2.5zM10 4c.84 0 1.673.025 2.5.075V3.75c0-.69-.56-1.25-1.25-1.25h-2.5c-.69 0-1.25.56-1.25 1.25v.325C8.327 4.025 9.16 4 10 4zM8.58 7.72a.75.75 0 00-1.5.06l.3 7.5a.75.75 0 101.5-.06l-.3-7.5zm4.34.06a.75.75 0 10-1.5-.06l-.3 7.5a.75.75 0 101.5.06l.3-7.5z" clip-rule="evenodd" />
               </svg>
            </div>
            <div class="ml-4">
               <h2 class="text-lg font-medium text-white">Delete file</h2>
               <p id="deleteMessage" class="text-sm text-neutral-400 mt-1"></p>
            </div>
         </div>
         <div class="mt-6 flex justify-end space-x-3">
            <button onclick="closeDeleteModal()" class="px-4 py-2 text-sm bg-white/5 hover:bg-white/10 text-neutral-300 rounded-lg transition">Cancel</button>
            <button id="confirmDelete" class="px-4 py-2 text-sm bg-red-500 hover:bg-red-600 text-white rounded-lg transition">Delete</button>
         </div>
      </div>
   </div>

   <!-- Rename file -->
   <div id="renameModal" class="fixed inset-0 bg-black/70 backdrop-blur z-50 flex items-center justify-center opacity-0 pointer-events-none transition-opacity duration-300">
      <div class="bg-neutral-800 border border-white/10 rounded-xl p-6 max-w-md w-full transform scale-95 transition-transform duration-300 shadow-2xl">
         <div class="mb-5">
            <h2 class="text-lg font-medium text-white">Rename file</h2>
            <p class="mt-1 text-sm text-neutral-400">Enter a new name for this file.</p>
         </div>
         <input type="text" id="newFileName" class="w-full px-4 py-2.5 bg-white/5 border border-white/10 rounded-lg focus:outline-none focus:ring-1 focus:ring-white/20 focus:border-white/20 transition text-white placeholder-neutral-500">
         <p id="extensionWarning" class="text-yellow-400 text-sm mt-2 hidden">Warning: Changing the file extension may affect file functionality.</p>
         <div class="mt-6 flex justify-end space-x-3">
            <button onclick="closeRenameModal()" class="px-4 py-2 text-sm bg-white/5 hover:bg-white/10 text-neutral-300 rounded-lg transition">Cancel</button>
            <button onclick="confirmRename()" class="px-4 py-2 text-sm bg-blue-500 hover:bg-blue-600 text-white rounded-lg transition">Rename</button>
         </div>
      </div>
   </div>

   <!-- File Upload Modal -->
   <div id="uploadModal" class="fixed inset-0 bg-black/70 backdrop-blur z-50 flex items-center justify-center opacity-0 pointer-events-none transition-opacity duration-300">
      <div class="bg-neutral-800 border border-white/10 rounded-xl p-6 max-w-md w-full transform scale-95 transition-transform duration-300 shadow-2xl">
         <div class="mb-5">
            <h2 class="text-lg font-medium text-white">Uploading files</h2>
            <p id="uploadStatus" class="mt-1 text-sm text-neutral-400">Preparing upload...</p>
         </div>
         <div class="w-full bg-white/10 rounded-full h-2">
            <div id="uploadProgress" class="bg-blue-500 h-2 rounded-full" style="width: 0%"></div>
         </div>
      </div>
   </div>

   <script>
      // Improved dropdown functionality
      function toggleDropdown(event, fileName) {
         event.stopPropagation();
         const dropdown = document.getElementById(`dropdown-${fileName}`);

         // Close other open dropdowns with animation
         document.querySelectorAll('[id^="dropdown-"]').forEach((el) => {
            if (el.id !== `dropdown-${fileName}` && !el.classList.contains('pointer-events-none')) {
               closeDropdown(el);
            }
         });

         // Toggle the clicked dropdown
         if (dropdown.classList.contains('pointer-events-none')) {
            openDropdown(dropdown);
         } else {
            closeDropdown(dropdown);
         }
      }

      function openDropdown(dropdown) {
         dropdown.classList.remove('opacity-0', 'scale-95', 'pointer-events-none');
         dropdown.classList.add('opacity-100', 'scale-100');
      }

      function closeDropdown(dropdown) {
         dropdown.classList.remove('opacity-100', 'scale-100');
         dropdown.classList.add('opacity-0', 'scale-95', 'pointer-events-none');
      }

      // Close dropdowns when clicking outside
      document.addEventListener('click', function(event) {
         if (!event.target.closest('td')) {
            document.querySelectorAll('[id^="dropdown-"]').forEach((dropdown) => {
               if (!dropdown.classList.contains('pointer-events-none')) {
                  closeDropdown(dropdown);
               }
            });
         }
      });

      // Improved search functionality
      const searchInput = document.getElementById('searchInput');
      const fileRows = document.querySelectorAll('tbody tr');

      searchInput.addEventListener('input', function() {
         const searchTerm = this.value.toLowerCase();

         fileRows.forEach(row => {
            const fileName = row.querySelector('td:nth-child(2)').textContent.toLowerCase();
            if (fileName.includes(searchTerm)) {
               row.style.display = '';
            } else {
               row.style.display = 'none';
            }
         });
      });

      // Upload functionality
      document.getElementById('uploadBtn').addEventListener('click', function() {
         document.getElementById('fileInput').click();
      });

      document.getElementById('emptyUploadBtn')?.addEventListener('click', function() {
         document.getElementById('fileInput').click();
      });

      document.getElementById('fileInput').addEventListener('change', function(event) {
         const files = event.target.files;
         if (files.length === 0) return;

         const formData = new FormData();
         Array.from(files).forEach(file => formData.append('files', file));

         // Open the upload modal
         const modal = document.getElementById('uploadModal');
         modal.classList.remove('opacity-0', 'pointer-events-none');
         modal.querySelector('div').classList.remove('scale-95');
         modal.querySelector('div').classList.add('scale-100');

         const xhr = new XMLHttpRequest();
         xhr.open('POST', '/instance/<%= req.params.id %>/files/upload<%= query %>', true);
         xhr.upload.onprogress = function(e) {
            if (e.lengthComputable) {
               const percentComplete = (e.loaded / e.total) * 100;
               document.getElementById('uploadProgress').style.width = percentComplete + '%';
               document.getElementById('uploadStatus').textContent = `Uploading ${files.length} file${files.length !== 1 ? 's' : ''} (${Math.floor(percentComplete)}%)`;
            }
         };
         xhr.onload = function() {
            if (xhr.status == 200) {
               document.getElementById('uploadStatus').textContent = 'Upload complete!';
               setTimeout(() => {
                  // Close the modal
                  modal.classList.add('opacity-0', 'pointer-events-none');
                  modal.querySelector('div').classList.remove('scale-100');
                  modal.querySelector('div').classList.add('scale-95');
                  // Reload the page
                  window.location.reload();
               }, 1000);
            } else {
               document.getElementById('uploadStatus').textContent = 'Upload failed. Server responded with status ' + xhr.status;
               setTimeout(() => {
                  // Close the modal
                  modal.classList.add('opacity-0', 'pointer-events-none');
                  modal.querySelector('div').classList.remove('scale-100');
                  modal.querySelector('div').classList.add('scale-95');
               }, 3000);
            }
         };
         xhr.onerror = function() {
            document.getElementById('uploadStatus').textContent = 'Upload failed. Please check your connection.';
            setTimeout(() => {
               // Close the modal
               modal.classList.add('opacity-0', 'pointer-events-none');
               modal.querySelector('div').classList.remove('scale-100');
               modal.querySelector('div').classList.add('scale-95');
            }, 3000);
         };
         xhr.send(formData);
         document.getElementById('fileInput').value = ''; // Reset file input
      });

      // Create File/Folder functionality
      document.getElementById('createFileBtn').addEventListener('click', openCreateFileModal);
      document.getElementById('createFolderBtn').addEventListener('click', openCreateFolderModal);

      function openCreateFileModal() {
         const modal = document.getElementById('createFileModal');
         modal.classList.remove('opacity-0', 'pointer-events-none');
         modal.querySelector('div').classList.remove('scale-95');
         modal.querySelector('div').classList.add('scale-100');
         document.getElementById('newFileNameInput').focus();
      }

      function closeCreateFileModal() {
         const modal = document.getElementById('createFileModal');
         modal.classList.add('opacity-0', 'pointer-events-none');
         modal.querySelector('div').classList.remove('scale-100');
         modal.querySelector('div').classList.add('scale-95');
         document.getElementById('newFileNameInput').value = '';
      }

      function confirmCreateFile() {
         const fileName = document.getElementById('newFileNameInput').value.trim();
         if (fileName) {
            const encodedFileName = encodeURIComponent(fileName);
            const createUrl = `/instance/<%= req.params.id %>/files/create/${encodedFileName}<%= query %>`;
            window.location.href = createUrl;
         }
      }

      function openCreateFolderModal() {
         const modal = document.getElementById('createFolderModal');
         modal.classList.remove('opacity-0', 'pointer-events-none');
         modal.querySelector('div').classList.remove('scale-95');
         modal.querySelector('div').classList.add('scale-100');
         document.getElementById('newFolderNameInput').focus();
      }

      function closeCreateFolderModal() {
         const modal = document.getElementById('createFolderModal');
         modal.classList.add('opacity-0', 'pointer-events-none');
         modal.querySelector('div').classList.remove('scale-100');
         modal.querySelector('div').classList.add('scale-95');
         document.getElementById('newFolderNameInput').value = '';
      }

      function confirmCreateFolder() {
         const folderName = document.getElementById('newFolderNameInput').value.trim();
         if (folderName) {
            const encodedFolderName = encodeURIComponent(folderName);
            const createUrl = `/instance/<%= req.params.id %>/files/create-folder/${encodedFolderName}<%= query %>`;
            window.location.href = createUrl;
         }
      }

      // Delete functionality
      let deleteUrl = '';

      function openDeleteModal(fileName, extension) {
         const modal = document.getElementById('deleteModal');
         const message = document.getElementById('deleteMessage');
         deleteUrl = `/instance/<%= req.params.id %>/files/delete/${encodeURIComponent(fileName)}${extension}`;

         message.textContent = `Are you sure you want to permanently delete "${fileName}"? This action cannot be undone.`;

         modal.classList.remove('opacity-0', 'pointer-events-none');
         modal.querySelector('div').classList.remove('scale-95');
         modal.querySelector('div').classList.add('scale-100');
      }

      function closeDeleteModal() {
         const modal = document.getElementById('deleteModal');
         modal.classList.add('opacity-0', 'pointer-events-none');
         modal.querySelector('div').classList.remove('scale-100');
         modal.querySelector('div').classList.add('scale-95');
      }

      document.getElementById('confirmDelete').addEventListener('click', function() {
         window.location.href = deleteUrl;
      });

      // Rename functionality
      let currentFileName = '';
      let currentExtension = '';

      function openRenameModal(fileName, extension) {
         const modal = document.getElementById('renameModal');
         const input = document.getElementById('newFileName');
         currentFileName = fileName;
         currentExtension = extension;

         input.value = fileName;

         modal.classList.remove('opacity-0', 'pointer-events-none');
         modal.querySelector('div').classList.remove('scale-95');
         modal.querySelector('div').classList.add('scale-100');

         input.focus();
         input.setSelectionRange(0, fileName.lastIndexOf('.'));
      }

      function closeRenameModal() {
         const modal = document.getElementById('renameModal');
         modal.classList.add('opacity-0', 'pointer-events-none');
         modal.querySelector('div').classList.remove('scale-100');
         modal.querySelector('div').classList.add('scale-95');
      }

      function confirmRename() {
         const newFileName = document.getElementById('newFileName').value.trim();
         if (newFileName && newFileName !== currentFileName) {
            const encodedNewFileName = encodeURIComponent(newFileName);
            const renameUrl = `/instance/<%= req.params.id %>/files/rename/${encodeURIComponent(currentFileName)}/${encodedNewFileName}${currentExtension}`;
            window.location.href = renameUrl;
         } else {
            closeRenameModal();
         }
      }

      document.getElementById('newFileName').addEventListener('input', function(event) {
         const warningElement = document.getElementById('extensionWarning');
         const newExtension = event.target.value.split('.').pop();
         const originalExtension = currentFileName.split('.').pop();

         if (newExtension !== originalExtension) {
            warningElement.classList.remove('hidden');
         } else {
            warningElement.classList.add('hidden');
         }
      });

      // Extract functionality
      let extractUrl = '';

      function openExtractModal(fileName, extension) {
         const modal = document.getElementById('extractModal');
         extractUrl = `/instance/<%= req.params.id %>/files/unzip/${encodeURIComponent(fileName)}${extension}`;

         modal.classList.remove('opacity-0', 'pointer-events-none');
         modal.querySelector('div').classList.remove('scale-95');
         modal.querySelector('div').classList.add('scale-100');
      }

      function closeExtractModal() {
         const modal = document.getElementById('extractModal');
         modal.classList.add('opacity-0', 'pointer-events-none');
         modal.querySelector('div').classList.remove('scale-100');
         modal.querySelector('div').classList.add('scale-95');
      }

      document.getElementById('confirmExtract').addEventListener('click', function() {
         const extractPath = document.getElementById('extractPath').value.trim();
         const finalUrl = extractPath ? `${extractUrl}&destination=${encodeURIComponent(extractPath)}` : extractUrl;
         window.location.href = finalUrl;
      });

      // Mass actions functionality
      const selectAllCheckbox = document.getElementById('selectAll');
      const fileCheckboxes = document.querySelectorAll('.file-checkbox:not(#selectAll)');
      const floatingActionBar = document.getElementById('floatingActionBar');
      const selectedFilesCount = document.getElementById('selectedFilesCount');
      const massDeleteBtn = document.getElementById('massDeleteBtn');
      const massExtractBtn = document.getElementById('massExtractBtn');
      const massDeleteModal = document.getElementById('massDeleteModal');
      const massExtractModal = document.getElementById('massExtractModal');
      const massDeleteMessage = document.getElementById('massDeleteMessage');
      const massExtractMessage = document.getElementById('massExtractMessage');
      const confirmMassDeleteBtn = document.getElementById('confirmMassDelete');
      const confirmMassExtractBtn = document.getElementById('confirmMassExtract');

      let selectedFiles = [];

      function updateSelectedFiles() {
         selectedFiles = Array.from(fileCheckboxes)
            .filter(checkbox => checkbox.checked)
            .map(checkbox => checkbox.dataset.filename);

         selectedFilesCount.textContent = `${selectedFiles.length} file${selectedFiles.length !== 1 ? 's' : ''} selected`;

         if (selectedFiles.length > 0) {
            floatingActionBar.classList.remove('translate-y-full');

            // Show/hide extract button based on selected files
            const hasArchiveFiles = selectedFiles.some(file => 
               ['zip', 'rar', 'tar', 'gz', '7z'].some(ext => file.toLowerCase().endsWith('.' + ext))
            );

            if (hasArchiveFiles) {
               massExtractBtn.classList.remove('hidden');
            } else {
               massExtractBtn.classList.add('hidden');
            }
         } else {
            floatingActionBar.classList.add('translate-y-full');
         }

         // Update the "select all" checkbox
         selectAllCheckbox.checked = fileCheckboxes.length > 0 && selectedFiles.length === fileCheckboxes.length;

         // Store the current state in sessionStorage
         sessionStorage.setItem('selectedFiles', JSON.stringify(selectedFiles));
      }

      function initializeSelectedFiles() {
         const storedSelectedFiles = JSON.parse(sessionStorage.getItem('selectedFiles') || '[]');
         fileCheckboxes.forEach(checkbox => {
            checkbox.checked = storedSelectedFiles.includes(checkbox.dataset.filename);
         });
         updateSelectedFiles();
      }

      selectAllCheckbox.addEventListener('change', function() {
         fileCheckboxes.forEach(checkbox => checkbox.checked = this.checked);
         updateSelectedFiles();
      });

      fileCheckboxes.forEach(checkbox => {
         checkbox.addEventListener('change', updateSelectedFiles);
      });

      massDeleteBtn.addEventListener('click', function() {
         massDeleteMessage.textContent = `Are you sure you want to permanently delete ${selectedFiles.length} file${selectedFiles.length !== 1 ? 's' : ''}? This action cannot be undone.`;
         massDeleteModal.classList.remove('opacity-0', 'pointer-events-none');
         massDeleteModal.querySelector('div').classList.remove('scale-95');
         massDeleteModal.querySelector('div').classList.add('scale-100');
      });

      massExtractBtn.addEventListener('click', function() {
         const archiveFiles = selectedFiles.filter(file => 
            ['zip', 'rar', 'tar', 'gz', '7z'].some(ext => file.toLowerCase().endsWith('.' + ext))
         );

         massExtractMessage.textContent = `Extract ${archiveFiles.length} archive${archiveFiles.length !== 1 ? 's' : ''}?`;
         massExtractModal.classList.remove('opacity-0', 'pointer-events-none');
         massExtractModal.querySelector('div').classList.remove('scale-95');
         massExtractModal.querySelector('div').classList.add('scale-100');
      });

      function closeMassDeleteModal() {
         massDeleteModal.classList.add('opacity-0', 'pointer-events-none');
         massDeleteModal.querySelector('div').classList.remove('scale-100');
         massDeleteModal.querySelector('div').classList.add('scale-95');
      }

      function closeMassExtractModal() {
         massExtractModal.classList.add('opacity-0', 'pointer-events-none');
         massExtractModal.querySelector('div').classList.remove('scale-100');
         massExtractModal.querySelector('div').classList.add('scale-95');
      }

      confirmMassDeleteBtn.addEventListener('click', async function() {
         closeMassDeleteModal();

         const deletePromises = selectedFiles.map(fileName => 
            fetch(`/instance/<%= req.params.id %>/files/delete/${encodeURIComponent(fileName)}<%= query %>`, { method: 'GET' })
         );

         try {
            await Promise.all(deletePromises);
            window.location.reload();
         } catch (error) {
            console.error('Error deleting files:', error);
            alert('An error occurred while deleting files. Please try again.');
         }
      });

      confirmMassExtractBtn.addEventListener('click', async function() {
         closeMassExtractModal();

         const archiveFiles = selectedFiles.filter(file => 
            ['zip', 'rar', 'tar', 'gz', '7z'].some(ext => file.toLowerCase().endsWith('.' + ext))
         );

         const extractPath = document.getElementById('massExtractPath').value.trim();
         const pathParam = extractPath ? `&destination=${encodeURIComponent(extractPath)}` : '';

         const extractPromises = archiveFiles.map(fileName => 
            fetch(`/instance/<%= req.params.id %>/files/unzip/${encodeURIComponent(fileName)}<%= query %>${pathParam}`, { method: 'GET' })
         );

         try {
            await Promise.all(extractPromises);
            window.location.reload();
         } catch (error) {
            console.error('Error extracting files:', error);
            alert('An error occurred while extracting files. Please try again.');
         }
      });

      // Initialize the state when the DOM is fully loaded
      document.addEventListener('DOMContentLoaded', initializeSelectedFiles);

      // Clear the stored state when leaving the page
      window.addEventListener('beforeunload', () => {
         sessionStorage.removeItem('selectedFiles');
      });

      // Initial update to set the correct state
      updateSelectedFiles();

      // Stats WebSocket
      const protocol = window.location.protocol === 'https:' ? 'wss' : 'ws';
      const instanceId = '<%= req.params.id %>';
      const wsPort = window.location.port || (protocol === 'wss' ? 443 : 80);

      function isValidJson(str) {
         try {
            JSON.parse(str);
         } catch (e) {
            return false;
         }
         return true;
      }

      function formatBytes(bytes, decimals = 2) {
         if (bytes === 0) return '0 Bytes';
         const k = 1024;
         const dm = decimals < 0 ? 0 : decimals;
         const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];
         const i = Math.floor(Math.log(bytes) / Math.log(k));
         return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];
      }

      const statsWs = new WebSocket(`${protocol}://${window.location.hostname}:${wsPort}/stats/${instanceId}`);

      statsWs.onmessage = event => {
         if (isValidJson(event.data)) {
            const stats = JSON.parse(event.data);
            if (stats.error) {
               console.error('Error fetching stats:', stats.error);
               document.getElementById('diskUsage').textContent = 'Error loading disk usage';
               return;
            }

            const diskUsageRaw = parseFloat(stats.volumeSize);
            const diskLimitRaw = 10 * 1024; // Assuming 10GB limit
            const diskUsagePercent = (diskUsageRaw / diskLimitRaw * 100).toFixed(2);
            document.getElementById('diskUsage').textContent = `${formatBytes(diskUsageRaw * 1024 * 1024)} / ${formatBytes(diskLimitRaw * 1024 * 1024)} (${diskUsagePercent}%)`;
         } else {
            console.log('Received non-JSON data:', event.data);
         }
      }

      statsWs.onerror = function(error) {
         console.error('WebSocket error:', error);
         document.getElementById('diskUsage').textContent = 'Error loading disk usage';
      }

      statsWs.onclose = function() {
         console.log('WebSocket connection closed');
         // Attempt to reconnect after 5 seconds
         setTimeout(() => {
            const newWs = new WebSocket(`${protocol}://${window.location.hostname}:${wsPort}/stats/${instanceId}`);
            newWs.onmessage = statsWs.onmessage;
            newWs.onerror = statsWs.onerror;
            newWs.onclose = statsWs.onclose;
            statsWs = newWs;
         }, 5000);
      }
   </script>
</main>
<%- include('../components/footer') %>